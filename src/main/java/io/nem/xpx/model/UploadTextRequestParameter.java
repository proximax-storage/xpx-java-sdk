/*
 * Proximax P2P Storage REST API
 * Proximax P2P Storage REST API
 *
 * OpenAPI spec version: v0.0.1
 * Contact: proximax.storage@proximax.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.nem.xpx.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;



/**
 * UploadTextRequestParameter.
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-25T23:45:59.064-04:00")
public class UploadTextRequestParameter {
  
  /** The content type. */
  @SerializedName("contentType")
  private String contentType = null;

  /** The encoding. */
  @SerializedName("encoding")
  private String encoding = null;

  /** The keywords. */
  @SerializedName("keywords")
  private String keywords = null;

  /** The metadata. */
  @SerializedName("metadata")
  private String metadata = null;

  /** The name. */
  @SerializedName("name")
  private String name = null;

  /** The text. */
  @SerializedName("text")
  private String text = null;

  /**
   * Content type.
   *
   * @param contentType the content type
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
    * Get contentType.
    *
    * @return contentType
    */
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  /**
   * Sets the content type.
   *
   * @param contentType the new content type
   */
  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  /**
   * Encoding.
   *
   * @param encoding the encoding
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter encoding(String encoding) {
    this.encoding = encoding;
    return this;
  }

   /**
    * Get encoding.
    *
    * @return encoding
    */
  @ApiModelProperty(value = "")
  public String getEncoding() {
    return encoding;
  }

  /**
   * Sets the encoding.
   *
   * @param encoding the new encoding
   */
  public void setEncoding(String encoding) {
    this.encoding = encoding;
  }

  /**
   * Keywords.
   *
   * @param keywords the keywords
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

   /**
    * Get keywords.
    *
    * @return keywords
    */
  @ApiModelProperty(value = "")
  public String getKeywords() {
    return keywords;
  }

  /**
   * Sets the keywords.
   *
   * @param keywords the new keywords
   */
  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }

  /**
   * Metadata.
   *
   * @param metadata the metadata
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
    * Get metadata.
    *
    * @return metadata
    */
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  /**
   * Sets the metadata.
   *
   * @param metadata the new metadata
   */
  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  /**
   * Name.
   *
   * @param name the name
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter name(String name) {
    this.name = name;
    return this;
  }

   /**
    * Get name.
    *
    * @return name
    */
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  /**
   * Sets the name.
   *
   * @param name the new name
   */
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Text.
   *
   * @param text the text
   * @return the upload text request parameter
   */
  public UploadTextRequestParameter text(String text) {
    this.text = text;
    return this;
  }

   /**
    * Get text.
    *
    * @return text
    */
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  /**
   * Sets the text.
   *
   * @param text the new text
   */
  public void setText(String text) {
    this.text = text;
  }


  /* (non-Javadoc)
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadTextRequestParameter uploadTextRequestParameter = (UploadTextRequestParameter) o;
    return Objects.equals(this.contentType, uploadTextRequestParameter.contentType) &&
        Objects.equals(this.encoding, uploadTextRequestParameter.encoding) &&
        Objects.equals(this.keywords, uploadTextRequestParameter.keywords) &&
        Objects.equals(this.metadata, uploadTextRequestParameter.metadata) &&
        Objects.equals(this.name, uploadTextRequestParameter.name) &&
        Objects.equals(this.text, uploadTextRequestParameter.text);
  }

  /* (non-Javadoc)
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    return Objects.hash(contentType, encoding, keywords, metadata, name, text);
  }


  /* (non-Javadoc)
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadTextRequestParameter {\n");
    
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   *
   * @param o the o
   * @return the string
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

